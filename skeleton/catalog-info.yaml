%SKELETON
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.identifier }}
  description: ${{ values.description | dump }}
  annotations:
    gitlab.com/project-slug: ${{ values.destination.owner + "/" + values.destination.repo }}
    backstage.io/techdocs-ref: dir:.
  links:
    - url: ${{ "https://s3.console.aws.amazon.com/s3/buckets/" + values.location.split("s3a://")[1] }}
      title: Impala table
      icon: cloud
  tags:
    - outputport
    - aws
    - cdp
    - impala
spec:
  type: outputport
  lifecycle: experimental
  owner: ${{ values.developmentGroup }}
  system: ${{ values.dataproduct | dump }}
  domain: ${{ values.domain | dump }}
  mesh:
    name: ${{ values.name | dump }}
    fullyQualifiedName: ${{ values.fullyQualifiedName | dump}}
    description: ${{ values.description | dump}}
    kind: outputport
    version: ${{ values.identifier.split(".")[2] + ".0.0" }}
    infrastructureTemplateId: ${{ values.infrastructureTemplateId }}
    useCaseTemplateId: ${{ values.useCaseTemplateId }}
    dependsOn: {% if values.dependsOn | length > 0 %}{% for i in values.dependsOn %}
      - ${{ i }}{% endfor %}{% else %}[]{% endif %}
    platform: CDP on AWS
    technology: Impala
    outputPortType: SQL
    creationDate: ${{ values.creationDate }}
    startDate: ${{ values.creationDate }}
    processDescription: ${{ values.processDescription | dump }}
    dataContract:
      schema: {% if values.schemaColumns | length > 0 %}{% for column in values.schemaColumns %}
        - name: ${{ column.name }}
          dataType: ${{ column.dataType }}
          description: ${{ column.description }}
        {% if column.dataLength %}
          dataLength: ${{ column.dataLength }}
        {% endif %}
        {% if column.dataTypeDisplay %}
          dataTypeDisplay: ${{ column.dataTypeDisplay }}
        {% endif %}
        {% if column.arrayDataType %}
          arrayDataType: ${{ column.arrayDataType }}
        {% endif %}{% endfor %}{% else %}[]{% endif %}
      termsAndConditions: ${{ values.termsAndConditions | dump }}
      endpoint: ${{ values.endpoint | dump }}
      SLA:
        intervalOfChange: ${{ values.intervalOfChange }}
        timeliness: ${{ values.timeliness }}
        upTime: ${{ values.upTime }}
    dataSharingAgreement:
      purpose: ${{ values.purpose | dump }}
      billing: ${{ values.billing | dump }}
      security: ${{ values.security | dump }}
      intendedUsage: ${{ values.intendedUsage | dump }}
      limitations: ${{ values.limitations | dump }}
      lifeCycle: ${{ values.lifeCycle | dump }}
      confidentiality: ${{ values.confidentiality | dump }}
    tags: []
    sampleData: {}
    semanticLinking: []
    specific:
      databaseName: ${{ values.databaseName | default(values.dataproduct, true) | replace(r/system:/, "") | replace(r/[^A-Za-z0-9_]/g, "_") | upper }}
      tableName: ${{ values.tableName | default(values.identifier, true) | replace(r/[^A-Za-z0-9_]/g, "_") | upper }}
      cdpEnvironment: ${{ values.cdpEnvironment }}
      cdwVirtualWarehouse: ${{ values.cdwVirtualWarehouse }}
      format: ${{ values.format }}
      location: ${{ values.location }}
      partitions: {% if values.partitions | length > 0 %}{% for partition in values.partitions %}
        - ${{ partition.value.name }}{% endfor %}{% else %}[]{% endif %}
      {% if values.header or values.delimiter or ( values.tableProperties | length > 0 ) %}
      tableParams:
        {% if values.header and (values.format === "CSV" or values.format == "TEXTFILE") %}
        header: ${{ values.header }} 
        {% endif %}
        {% if values.delimiter and (values.format === "CSV" or values.format == "TEXTFILE") %} 
        delimiter: "${{ values.delimiter if values.delimiter != "OTHER" else values.customDelimiter }}"
        {% endif %}
        tblProperties: {% if values.tableProperties | length > 0 %}
        {% for property in values.tableProperties %}
          ${{ property.key | dump }}: ${{ property.value | dump }}
        {% endfor %}{% else %}{}{% endif %}
      {% endif %}
      
